<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_water</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0;
values = ds_map_create();
values[? "uni_animStep"] = shader_get_uniform(shd_water,"animStep");
values[? "uni_dir"] = shader_get_uniform(shd_water,"dir");

values[? "val_animStep"] = 0;
values[? "val_dir"] = 0;
inc = pi/180;
var width = sprite_width, height = sprite_height;
waterBuff = vertex_create_buffer();
vertex_begin(waterBuff,vertexBufferFormat);
var size = 16;
var tt, tb, tl, tr;
for (var i=0;i&lt;sprite_width;i+=size)
{
    for (var j=0;j&lt;sprite_height;j+=size)
    {
        tt = j/(sprite_height/image_yscale);
        tl = i/(sprite_width/image_xscale);
        tb = (j+1)/(sprite_height/image_yscale);
        tr = (i+1)/(sprite_width/image_xscale);
        
        vertex_position_3d(waterBuff,i,j,0);
        vertex_colour(waterBuff,c_white,1);
        vertex_texcoord(waterBuff,tl,tt);
        
        vertex_position_3d(waterBuff,i+size,j,0);
        vertex_colour(waterBuff,c_white,1);
        vertex_texcoord(waterBuff,tr,tt);
        
        vertex_position_3d(waterBuff,i+size,j+size,0);
        vertex_colour(waterBuff,c_white,1);
        vertex_texcoord(waterBuff,tl,tb);
        
        
        vertex_position_3d(waterBuff,i+size,j+size,0);
        vertex_colour(waterBuff,c_white,1);
        vertex_texcoord(waterBuff,tr,tb);
        
        vertex_position_3d(waterBuff,i,j+size,0);
        vertex_colour(waterBuff,c_white,1);
        vertex_texcoord(waterBuff,tr,tt);
        
        vertex_position_3d(waterBuff,i,j,0);
        vertex_colour(waterBuff,c_white,1);
        vertex_texcoord(waterBuff,tl,tb);
    }
}
vertex_end(waterBuff);
vertex_freeze(waterBuff);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>values[? "val_dir"]+=inc;
values[? "val_animStep"] += 0.25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
values[? "uni_x"] = shader_get_uniform(shd_water,"xx");
values[? "uni_y"] = shader_get_uniform(shd_water,"yy");
values[? "uni_dir"] = shader_get_uniform(shd_water,"dir");

values[? "val_x"] = x;
values[? "val_y"] = y;
values[? "val_dir"] = 0;
*/
d3d_transform_set_identity();
d3d_transform_set_translation(x,y,z);

shader_set(shd_water)
shader_set_uniform_f(values[? "uni_dir"],values[? "val_dir"]);
shader_set_uniform_f(values[? "uni_animStep"],values[? "val_animStep"]);
vertex_submit(waterBuff,pr_trianglelist,background_get_texture(tex_water));
shader_reset();

d3d_transform_set_identity();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
