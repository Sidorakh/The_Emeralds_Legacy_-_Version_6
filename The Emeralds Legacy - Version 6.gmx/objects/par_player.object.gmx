<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_mask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>z = 0;
zmin = 0;
zmax = 0;
zdirection = 180;
xspeed = 0;
yspeed = 0;
zspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///soundcontrol
audio_listener_position(x,y,z+playerHeight);
var vx, vy, vz, xup, yup, zup;
vx = d3d_lengthdir_x(1,direction,zdirection);
vy = d3d_lengthdir_y(1,direction,zdirection);
vz = d3d_lengthdir_z(1,direction,zdirection);
xup = d3d_lengthdir_x(1,direction,zdirection+90);
yup = d3d_lengthdir_x(1,direction,zdirection+90);
zup = d3d_lengthdir_x(1,direction,zdirection+90);
audio_listener_orientation(vx,vy,vz,xup,yup,zup);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///player z-control
zmin = z;
zmax = z + playerHeight;
with par_block
{
    if collision_rectangle(x1,y1,x2,y2,other.id,false,true) != noone
    {
        if keyboard_check(ord('R'))
        {
            show_debug_message("col" + string(current_time));
        }
        /*
        if other.zmin+2 &gt;= max(z1,z2)       //if players feet is above, or on level with, the block
        {
            other.zmin = max(z1,z2,other.zmin);     //set the minimum z to the blocks top, or the min z - whichever is highest
        }
        if other.zmax &lt; min(z1,z2)          //if players head is below, or on level with, the block
        {
            other.zmax = min(z1,z2,other.zmax);     //set the maximum z to the blocks bottom, or the max z - whichever is lowest
        }
        */
        if max(z1,z2) &gt;= other.z + playerHeight &amp;&amp; max(z1,z2) &lt; other.zmax
        {
            other.zmax = (z-height)
        }
        if min(z1,z2) &gt;= other.zmin-4 &amp;&amp; min(z1,z2) &lt;= other.z + 4
        {
            other.zmin = z
        }
    }
}
if z &lt; zmin
{
    z = zmin;
}
if z &gt; zmax
{
    z = zmax;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouselook + movement

var ud = (keyboard_check(ord('S'))-keyboard_check(ord('W')));
var lr = (keyboard_check(ord('D'))-keyboard_check(ord('A')));
var dx = (window_get_width()/2-window_mouse_get_x());
var dy = (window_get_height()/2-window_mouse_get_y());
if window_has_focus()
{
    direction += dx;
    zdirection += dy;
    window_mouse_set(window_get_width()/2,window_get_height()/2);
}
xspeed = clamp(xspeed+lengthdir_x(ud,direction)+lengthdir_x(lr,direction+90),-4,4);
yspeed = clamp(yspeed+lengthdir_y(ud,direction)+lengthdir_y(lr,direction+90),-4,4);
with (obj_camera)
{
    xf = other.x;
    yf = other.y;
    zf = other.z+playerHeight;
    xt = xf+d3d_lengthdir_x(1,other.direction,other.zdirection);
    yt = yf+d3d_lengthdir_y(1,other.direction,other.zdirection);
    zt = zf+d3d_lengthdir_z(1,other.direction,other.zdirection);
    xup = d3d_lengthdir_x(1,other.direction,other.zdirection+90);
    yup = d3d_lengthdir_y(1,other.direction,other.zdirection+90);
    zup = d3d_lengthdir_z(1,other.direction,other.zdirection+90);
}
x += xspeed;
y += yspeed;
xspeed = lerp(xspeed,0,0.5);
yspeed = lerp(yspeed,0,0.5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(4,64,"zmin: " + string(zmin) + "#zmax: " + string(zmax) + "#x: " + string(x) + "#y: " + string(y) + "#z: " + string(z));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//d3d_set_projection(xf,yf,zf,xt,yt,zt,xup,yup,zup);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
